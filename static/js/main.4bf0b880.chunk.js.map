{"version":3,"sources":["forms/LoginForm.js","layout/main.js","pages/Login.js","forms/ForgotPasswordForm.js","pages/ForgotPassword.js","forms/RegistrationForm.js","pages/Register.js","App.js","serviceWorker.js","index.js"],"names":["NormalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","this","onSubmit","className","Item","rules","required","message","prefix","type","style","color","placeholder","justify","valuePropName","initialValue","htmlType","block","lineHeight","marginTop","to","href","React","Component","WrappedNormalLoginForm","Form","create","name","Header","Layout","Footer","Content","MainLayout","children","minHeight","md","lg","mode","defaultSelectedKeys","key","padding","LoginPage","span","offset","title","LoginForm","ForgotPasswordPage","ForgotPasswordForm","RegisterForm","WrappedNormalRegisterForm","RegisterPage","RegistrationForm","App","path","ForgotPassword","Register","Login","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bf0b880.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Icon, Input, Button, Checkbox, Row} from 'antd';\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{required: true, message: 'Please input your Password!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Row type=\"flex\" justify=\"space-between\">\n            <div>\n              {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n              })(<Checkbox>Remember me</Checkbox>)}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                block={true}\n                className=\"login-form-button\">\n                Log in\n              </Button>\n            </div>\n\n            <div style={{lineHeight: 1.6, marginTop: 10}}>\n              <div>\n                <Link to=\"/remember\">Forgot Password?</Link>\n              </div>\n              <div>\n                <Link to=\"/register\">Register</Link>\n              </div>\n              <div><a href=\"http://lk.spbstu.ru/\">Login with SPbPU ID</a></div>\n            </div>\n          </Row>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({name: 'normal_login'})(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;","import React from \"react\";\nimport {Card, Col, Layout, Menu, Row} from 'antd';\nimport LoginForm from '../forms/LoginForm';\n\nconst {Header, Footer, Content} = Layout;\n\nfunction MainLayout({children}) {\n  return <div style={{minHeight: \"100vh\"}}>\n      <Layout>\n        <Header>\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col md={6} style={{color: \"white\"}}>NoBody Inc</Col>\n            <Col md={5} lg={3}>\n              <Menu\n                mode=\"horizontal\"\n                defaultSelectedKeys={[\"en\"]}\n                style={{lineHeight: \"64px\"}}>\n                <Menu.Item key=\"en\">En</Menu.Item>\n                <Menu.Item key=\"ru\">Ru</Menu.Item>\n              </Menu>\n            </Col>\n          </Row>\n        </Header>\n        <Content style={{padding: 36}}>\n          {children}\n        </Content>\n        <Footer>\n          <Row>\n            <Col md={6}>&copy; 2019 Nobody Inc</Col>\n          </Row>\n        </Footer>\n      </Layout>\n    </div>\n}\n\nexport default MainLayout;\n","import {Card, Col, Row} from 'antd';\nimport LoginForm from '../forms/LoginForm';\nimport React from 'react';\nimport MainLayout from '../layout/main';\n\nconst LoginPage = () => (\n  <MainLayout>\n    <Row>\n      <Col md={{span: 16, offset: 4}} lg={{span: 8, offset: 8}}>\n        <Card title=\"Login\">\n          <LoginForm/>\n        </Card>\n      </Col>\n    </Row>\n  </MainLayout>\n);\n\nexport default LoginPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Icon, Input, Button, Row} from 'antd';\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"forgot-password-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Row type=\"flex\" justify=\"space-between\">\n            <div>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                block={true}\n                className=\"login-form-button\">\n                Remember Password\n              </Button>\n            </div>\n\n            <div style={{lineHeight: 1.6}}>\n              <div>\n                <Link to=\"/\">Login</Link>\n              </div>\n              <div>\n                <Link to=\"/register\">Register</Link>\n              </div>\n              <div><a href=\"http://lk.spbstu.ru/\">Login with SPbPU ID</a></div>\n            </div>\n          </Row>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({name: 'normal_login'})(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;","import {Card, Col, Row} from 'antd';\nimport React from 'react';\nimport MainLayout from '../layout/main';\nimport ForgotPasswordForm from '../forms/ForgotPasswordForm';\n\nconst ForgotPasswordPage = () => (\n  <MainLayout>\n    <Row>\n      <Col md={{span: 16, offset: 4}} lg={{span: 8, offset: 8}}>\n        <Card title=\"Remember Password\">\n          <ForgotPasswordForm/>\n        </Card>\n      </Col>\n    </Row>\n  </MainLayout>\n);\n\nexport default ForgotPasswordPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Icon, Input, Button, Row} from 'antd';\n\nclass RegisterForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('firstName', {\n            rules: [{required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              placeholder=\"First Name\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('lastName', {\n            rules: [{required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              placeholder=\"Last Name\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{required: true, message: 'Please input your Password!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Row type=\"flex\" justify=\"space-between\">\n            <div>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                block={true}\n                className=\"login-form-button\">\n                Register\n              </Button>\n            </div>\n\n            <div style={{lineHeight: 1.6}}>\n              <div>\n                <Link to=\"/login\">Login</Link>\n              </div>\n              <div><a href=\"http://lk.spbstu.ru/\">Login with SPbPU ID</a></div>\n            </div>\n          </Row>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalRegisterForm = Form.create({name: 'normal_login'})(RegisterForm);\n\nexport default WrappedNormalRegisterForm;","import {Card, Col, Row} from 'antd';\nimport RegistrationForm from '../forms/RegistrationForm';\nimport React from 'react';\nimport MainLayout from '../layout/main';\n\nconst RegisterPage = () => (\n  <MainLayout>\n    <Row>\n      <Col md={{span: 16, offset: 4}} lg={{span: 8, offset: 8}}>\n        <Card title=\"Login\">\n          <RegistrationForm/>\n        </Card>\n      </Col>\n    </Row>\n  </MainLayout>\n);\n\nexport default RegisterPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport LoginPage from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword';\nimport RegisterPage from './pages/Register';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/remember\">\n          <ForgotPassword/>\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage/>\n        </Route>\n        <Route path=\"/\">\n          <LoginPage/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}