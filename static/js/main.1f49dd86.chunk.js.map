{"version":3,"sources":["services/queries/auth.js","constants.js","state/user.js","forms/LoginForm.js","layout/UserMenu.js","layout/Logo.js","layout/MainMenu.js","layout/main.js","pages/Login.js","pages/Settings.js","pages/Logout.js","forms/ForgotPasswordForm.js","pages/ForgotPassword.js","forms/RegistrationForm.js","pages/Register.js","pages/Main.js","pages/Inquiries.js","pages/History.js","pages/Payment.js","services/index.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","gql","AUTH_TOKEN","john","firstName","lastName","login","isLogged","logout","this","MyForm","form","onSubmit","useMutation","signInBasic","data","console","log","e","preventDefault","validateFields","err","values","user","variables","type","username","password","sessionToken","then","handleSubmit","className","Item","getFieldDecorator","rules","required","message","prefix","style","color","placeholder","orientation","gutter","justify","align","sm","xs","src","maxWidth","alt","to","valuePropName","initialValue","htmlType","block","lineHeight","marginTop","href","NormalLoginForm","props","_storeToken","token","localStorage","setItem","state","redirect","push","setState","React","Component","WrappedNormalLoginForm","Form","create","name","menu","padding","fullName","Divider","key","UserMenu","overlay","placement","size","shape","icon","Logo","clickHandler","cursor","onClick","children","Sider","Layout","LoggedItems","AnonymousItems","MainMenu","background","mode","height","Header","Footer","Content","MainLayout","showMenu","minHeight","md","lg","defaultSelectedKeys","LoginPage","span","offset","title","LoginForm","SettignsPage","Title","Typography","LogoutPage","ForgotPasswordPage","ForgotPasswordForm","RegisterForm","WrappedNormalRegisterForm","RegisterPage","RegistrationForm","MainPage","Inquiries","History","Payment","client","ApolloClient","uri","App","path","ForgotPassword","Register","Settings","Logout","Login","Main","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f49dd86.chunk.js","sourcesContent":["import {gql} from 'apollo-boost';\n\nconst LOGIN = gql`\n  mutation SignInBasic($type: signDataBasic!) {\n    signInBasic(input: $type) {\n      tokenInfo {\n        accessToken,\n      }\n    }\n  }\n\n`;\n\nexport {LOGIN};\n","export const AUTH_TOKEN = 'auth-token';\n","class User {\n  constructor({firstName, lastName}) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.isLogged = false;\n  }\n\n  login = () => {\n    this.isLogged = true;\n  };\n\n  logout = () => {\n    this.isLogged = false;\n  };\n\n  get fullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n\nconst john = new User({firstName: 'John', lastName: 'Doe'});\n\nexport default john;\n","import React from 'react';\nimport {useMutation} from '@apollo/react-hooks';\nimport {Link, Redirect} from 'react-router-dom';\nimport {Form, Icon, Input, Button, Checkbox, Row, Divider, Col} from 'antd';\nimport {LOGIN} from '../services/queries/auth'\nimport {AUTH_TOKEN} from '../constants'\n\nimport user from '../state/user';\n\nconst MyForm = ({form, onSubmit}) => {\n  const [signInBasic, {data}] = useMutation(LOGIN);\n  if (data) {\n    console.log(data);\n  }\n\n  const handleSubmit = (form, onSubmit) => e => {\n    e.preventDefault();\n\n    form.validateFields((err, values) => {\n      if (!err) {\n        user.login();\n        signInBasic({\n          variables: {\n            type: {\n              username: values.username,\n              password: values.password,\n              sessionToken: \"\"\n            }\n          }\n        }).then(onSubmit);\n\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(form, onSubmit)} className=\"login-form\">\n      <Form.Item>\n        {form.getFieldDecorator('username', {\n          rules: [{required: true, message: 'Please input your username!'}],\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n            placeholder=\"Phone Number or Email\"\n          />,\n        )}\n      </Form.Item>\n      <Form.Item>\n        {form.getFieldDecorator('password', {\n          rules: [{required: true, message: 'Please input your Password!'}],\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n            type=\"password\"\n            placeholder=\"Password\"\n          />,\n        )}\n      </Form.Item>\n\n      <Divider orientation=\"left\">Are you not a bot?</Divider>\n\n      <Form.Item>\n        <Row gutter={16} type=\"flex\" justify=\"space-between\" align=\"middle\">\n          <Col sm={12} xs={24}><img src=\"img/captcha.jpg\" style={{maxWidth: \"100%\"}} alt=\"captcha\"/></Col>\n          <Col sm={12} xs={24}>\n            {form.getFieldDecorator('capthca', {\n              rules: [{required: true, message: 'Please input text from image!'}],\n            })(\n              <Input\n                placeholder=\"Text on Image\"\n              />,\n            )}\n            <div>\n              <Link to=\"\">Reload Image</Link>\n              <Divider type=\"vertical\"/>\n              <Link to=\"\">Play Sound</Link>\n            </div>\n          </Col>\n        </Row>\n      </Form.Item>\n\n      <Form.Item>\n        <Row gutter={16} type=\"flex\" justify=\"space-between\">\n          <Col sm={12} xs={24}>\n            {form.getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(<Checkbox>Remember me</Checkbox>)}\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              block={true}\n              className=\"login-form-button\">\n              Log in\n            </Button>\n          </Col>\n\n          <Col sm={12} xs={24} style={{lineHeight: 1.6, marginTop: 10}}>\n            <div>\n              <Link to=\"/remember\">Forgot Password?</Link>\n            </div>\n            <div>\n              <Link to=\"/register\">Register</Link>\n            </div>\n            <div><a href=\"http://lk.spbstu.ru/\">Login with SPbPU ID</a></div>\n          </Col>\n        </Row>\n      </Form.Item>\n    </Form>\n  );\n};\n\nclass NormalLoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {redirect: false};\n  }\n\n  _storeToken = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to=\"/\"/>\n    }\n\n    return <MyForm form={this.props.form} onSubmit={(data) => {\n      console.log(data);\n      this.setState({redirect: true})\n    }}/>;\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({name: 'normal_login'})(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;","import React from 'react';\nimport {Button, Divider, Dropdown, Menu} from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport user from '../state/user';\n\nconst menu = (\n  <Menu>\n    <div style={{padding: \"5px 12px\"}}>\n      {user.fullName}\n    </div>\n    <Menu.Divider/>\n    <Menu.Item key=\"0\">\n      <Link to=\"/settings\">\n        Settings\n      </Link>\n    </Menu.Item>\n    <Menu.Item key=\"1\">\n      <Link to=\"/logout\">\n        Logout\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n\nconst UserMenu = (props) => {\n  if (!user.isLogged) {\n    return [<Divider key='divider' type='vertical' />, <Link key='link' to=\"/login\">Login</Link>];\n  }\n\n  return <Dropdown overlay={menu} placement=\"bottomRight\">\n    <Button size=\"large\" shape=\"circle\" icon=\"user\"/>\n  </Dropdown>\n};\n\nexport default UserMenu;\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\n\nclass Logo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {redirect: false};\n  }\n\n  clickHandler = () => {\n    this.setState({redirect: true});\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect push to=\"/\"/>\n    }\n\n    return <div\n      style={{cursor: \"pointer\"}}\n      onClick={this.clickHandler}>{this.props.children}</div>\n  }\n}\n\nexport default Logo;\n","import React from 'react';\nimport {Icon, Menu, Layout} from 'antd';\n\nimport user from '../state/user';\nimport {Link} from 'react-router-dom';\n\nconst {Sider} = Layout;\n\nconst LoggedItems = [\n  <Menu.Item key=\"1\">\n    <Link to=\"/payment\"><Icon type=\"credit-card\"/> Payment</Link>\n  </Menu.Item>,\n  <Menu.Item key=\"2\">\n    <Link to=\"/inquiries\"><Icon type=\"file\"/> Inquiries</Link>\n  </Menu.Item>,\n  <Menu.Item key=\"3\">\n    <Link to=\"/history\"><Icon type=\"calendar\"/> History</Link>\n  </Menu.Item>,\n];\n\nconst AnonymousItems = [\n  <Menu.Item key=\"1\">\n    <Link to=\"/payment\"><Icon type=\"credit-card\"/> Payment</Link>\n  </Menu.Item>,\n  <Menu.Divider key=\"-\"/>,\n  <Menu.Item key=\"2\">\n    <Link to=\"/login\"><Icon type=\"user\"/> Login</Link>\n  </Menu.Item>\n];\n\nconst MainMenu = () => (\n  <Sider style={{background: '#FFF'}}>\n    <Menu\n      mode=\"inline\"\n      style={{height: '100%'}}\n    >\n      {(user.isLogged && LoggedItems) || AnonymousItems}\n    </Menu>\n  </Sider>\n);\n\nexport default MainMenu;","import React from \"react\";\nimport {Col, Layout, Menu, Row} from 'antd';\nimport UserMenu from './UserMenu';\nimport Logo from './Logo';\nimport MainMenu from './MainMenu';\n\nconst {Header, Footer, Content} = Layout;\n\nfunction MainLayout({showMenu = true, children}) {\n  const styles = {\n    minHeight: 'calc(100vh - 164px)',\n    padding: 36,\n  };\n\n  return <Layout style={{minHeight: \"100vh\"}}>\n    <Header>\n      <Row type=\"flex\" justify=\"space-between\">\n        <Col md={6} style={{color: \"white\"}}>\n          <Logo>NoBody Inc</Logo>\n        </Col>\n        <Col md={6} lg={5}>\n          <Menu\n            mode=\"horizontal\"\n            align=\"right\"\n            defaultSelectedKeys={[\"en\"]}\n            style={{lineHeight: \"64px\", padding: \"0 12px\"}}>\n            <Menu.Item key=\"en\">En</Menu.Item>\n            <Menu.Item key=\"ru\">Ru</Menu.Item>\n            <UserMenu/>\n          </Menu>\n        </Col>\n      </Row>\n    </Header>\n    <Layout>\n      {showMenu && <MainMenu/>}\n      <Content style={styles}>\n        {children}\n      </Content>\n    </Layout>\n    <Footer style={{background: '#d6d9de'}}>\n      <Row>\n        <Col md={6}>&copy; 2019 Nobody Inc</Col>\n      </Row>\n    </Footer>\n  </Layout>\n}\n\nexport default MainLayout;\n","import {Card, Col, Row} from 'antd';\nimport LoginForm from '../forms/LoginForm';\nimport React from 'react';\nimport MainLayout from '../layout/main';\n\nconst LoginPage = () => (\n  <MainLayout showMenu={false}>\n    <Row>\n      <Col md={{span: 16, offset: 4}} lg={{span: 8, offset: 8}}>\n        <Card title=\"Login\">\n          <LoginForm/>\n        </Card>\n      </Col>\n    </Row>\n  </MainLayout>\n);\n\nexport default LoginPage;\n","import React from 'react';\nimport MainLayout from '../layout/main';\n\nconst SettignsPage = () => (\n  <MainLayout>\n    <h1>Settings</h1>\n  </MainLayout>\n);\n\nexport default SettignsPage;\n","import React from 'react';\nimport {Typography} from 'antd';\n\nimport MainLayout from '../layout/main';\nimport user from '../state/user';\n\nconst {Title} = Typography;\n\nconst LogoutPage = () => {\n  user.logout();\n\n  return <MainLayout showMenu={false}>\n    <Title>Logout</Title>\n\n    <p>You were logged out</p>\n  </MainLayout>;\n};\n\nexport default LogoutPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Icon, Input, Button, Row, Col} from 'antd';\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"forgot-password-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              placeholder=\"Phone Number or Email\"\n            />,\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Row gutter={16} type=\"flex\" justify=\"space-between\">\n            <Col sm={12} xs={24}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                block={true}\n                className=\"login-form-button\">\n                Remember Password\n              </Button>\n            </Col>\n\n            <Col sm={12} xs={24} style={{lineHeight: 1.6}}>\n              <div>\n                <Link to=\"/\">Login</Link>\n              </div>\n              <div>\n                <Link to=\"/register\">Register</Link>\n              </div>\n              <div><a href=\"http://lk.spbstu.ru/\">Login with SPbPU ID</a></div>\n            </Col>\n          </Row>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({name: 'normal_login'})(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;","import {Card, Col, Row} from 'antd';\nimport React from 'react';\nimport MainLayout from '../layout/main';\nimport ForgotPasswordForm from '../forms/ForgotPasswordForm';\n\nconst ForgotPasswordPage = () => (\n  <MainLayout showMenu={false}>\n    <Row>\n      <Col md={{span: 16, offset: 4}} lg={{span: 8, offset: 8}}>\n        <Card title=\"Remember Password\">\n          <ForgotPasswordForm/>\n        </Card>\n      </Col>\n    </Row>\n  </MainLayout>\n);\n\nexport default ForgotPasswordPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Icon, Input, Button, Row, Col} from 'antd';\n\nclass RegisterForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{required: true, message: 'Please input your username!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              placeholder=\"Phone Number or Email\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{required: true, message: 'Please input your Password!'}],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Row gutter={16} type=\"flex\" justify=\"space-between\">\n            <Col sm={12} xs={24}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                block={true}\n                className=\"login-form-button\">\n                Register\n              </Button>\n            </Col>\n\n            <Col sm={12} xs={24} style={{lineHeight: 1.6}}>\n              <div>\n                <Link to=\"/login\">Login</Link>\n              </div>\n              <div><a href=\"http://lk.spbstu.ru/\">Login with SPbPU ID</a></div>\n            </Col>\n          </Row>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalRegisterForm = Form.create({name: 'normal_login'})(RegisterForm);\n\nexport default WrappedNormalRegisterForm;","import {Card, Col, Row} from 'antd';\nimport RegistrationForm from '../forms/RegistrationForm';\nimport React from 'react';\nimport MainLayout from '../layout/main';\n\nconst RegisterPage = () => (\n  <MainLayout showMenu={false}>\n    <Row>\n      <Col md={{span: 16, offset: 4}} lg={{span: 8, offset: 8}}>\n        <Card title=\"Login\">\n          <RegistrationForm/>\n        </Card>\n      </Col>\n    </Row>\n  </MainLayout>\n);\n\nexport default RegisterPage;\n","import React from 'react';\nimport MainLayout from '../layout/main';\nimport {Typography} from 'antd';\n\nconst { Title } = Typography;\n\nconst MainPage = () => (\n  <MainLayout>\n    <Title>SPbPU Acquiring Service</Title>\n    <p>Some description about service will be here</p>\n  </MainLayout>\n);\n\nexport default MainPage;","import React from 'react';\nimport MainLayout from '../layout/main';\nimport {Typography} from 'antd';\n\nconst { Title } = Typography;\n\nconst Inquiries = () => (\n  <MainLayout>\n    <Title>Inquiries</Title>\n    <p>Inquiries Page will be here</p>\n  </MainLayout>\n);\n\nexport default Inquiries;","import React from 'react';\nimport MainLayout from '../layout/main';\nimport {Typography} from 'antd';\n\nconst { Title } = Typography;\n\nconst History = () => (\n  <MainLayout>\n    <Title>History</Title>\n    <p>History Page will be here</p>\n  </MainLayout>\n);\n\nexport default History;","import React from 'react';\nimport MainLayout from '../layout/main';\nimport {Typography} from 'antd';\n\nconst { Title } = Typography;\n\nconst Payment = () => (\n  <MainLayout>\n    <Title>Payment</Title>\n    <p>Payment Form will be here</p>\n  </MainLayout>\n);\n\nexport default Payment;","import ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://po.meow.spbstu.ru/api/v1/query',\n});\n\nexport {client};\n","import React from \"react\";\nimport \"./App.css\";\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport {\n  LoginPage, ForgotPasswordPage, RegisterPage, SettingsPage,\n  LogoutPage, MainPage, InquiriesPage, HistoryPage, PaymentPage\n} from './pages';\nimport {client} from './services';\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <Route path=\"/remember\">\n            <ForgotPasswordPage/>\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage/>\n          </Route>\n          <Route path=\"/settings\">\n            <SettingsPage/>\n          </Route>\n          <Route path=\"/logout\">\n            <LogoutPage/>\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage/>\n          </Route>\n          <Route path=\"/inquiries\">\n            <InquiriesPage/>\n          </Route>\n          <Route path=\"/history\">\n            <HistoryPage/>\n          </Route>\n          <Route path=\"/payment\">\n            <PaymentPage/>\n          </Route>\n          <Route path=\"/\">\n            <MainPage/>\n          </Route>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}